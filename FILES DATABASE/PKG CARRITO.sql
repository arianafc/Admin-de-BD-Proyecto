CREATE OR REPLACE PACKAGE FIDE_LOS_JAULES_CARRITO_PKG AS
PROCEDURE FIDE_LOS_JAULES_CREAR_CARRITO_SP(P_CEDULA IN NUMBER);
PROCEDURE FIDE_LOS_JAULES_AGREGAR_MEMBRESIA_SP(P_CEDULA IN NUMBER, P_ID_CARRITO IN NUMBER, P_MEMBRESIA IN NUMBER);
PROCEDURE FIDE_LOS_JAULES_AGREGAR_RESERVA_SP (P_CEDULA IN NUMBER, P_ID_CARRITO IN NUMBER, P_RESERVA IN NUMBER);
END FIDE_LOS_JAULES_CARRITO_PKG;

COMMIT;


CREATE OR REPLACE PACKAGE BODY FIDE_LOS_JAULES_CARRITO_PKG AS
--1.CREAR CARRITO
    PROCEDURE FIDE_LOS_JAULES_CREAR_CARRITO_SP(P_CEDULA IN NUMBER) AS
        V_RESULTADO NUMBER;
        VSQLCODE NUMBER;
VSQLERRM VARCHAR2(600);
    BEGIN
        -- Verificar si ya existe un carrito para la cédula
        SELECT COUNT(*) INTO V_RESULTADO FROM FIDE_CARRITO_TB WHERE CEDULA = P_CEDULA;

        IF V_RESULTADO = 0 THEN
            INSERT INTO FIDE_CARRITO_TB (ID_CARRITO, CEDULA)
            VALUES (ID_CARRITO_SEQ.NEXTVAL, P_CEDULA);
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error: ' || VSQLCODE || ' - ' || VSQLERRM);
    END FIDE_LOS_JAULES_CREAR_CARRITO_SP;
---2. AÑADIR ARTICULOS A CARRITO
PROCEDURE FIDE_LOS_JAULES_AGREGAR_MEMBRESIA_SP(P_CEDULA IN NUMBER, P_ID_CARRITO IN NUMBER, P_MEMBRESIA IN NUMBER)
AS
V_PRECIO NUMBER;
VSQLCODE NUMBER;
VSQLERRM VARCHAR2(600);
V_CANTIDAD NUMBER;
BEGIN
V_CANTIDAD:=1;
    SELECT COSTO INTO V_PRECIO FROM FIDE_TIPO_MEMBRESIAS_TB WHERE ID_TIPO_MEMBRESIA = P_MEMBRESIA;
    INSERT INTO FIDE_CARRITO_ITEMS_TB (ID_CARRITO, ID_TIPO_MEMBRESIA, CANTIDAD, PRECIO) VALUES (P_ID_CARRITO, P_MEMBRESIA, V_CANTIDAD, V_PRECIO*V_CANTIDAD);
    COMMIT;
 EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error: ' || VSQLCODE || ' - ' || VSQLERRM);
END FIDE_LOS_JAULES_AGREGAR_MEMBRESIA_SP;

--2.2. AÑADIR RESERVAS A CARRITO
PROCEDURE FIDE_LOS_JAULES_AGREGAR_RESERVA_SP(P_CEDULA IN NUMBER, P_ID_CARRITO IN NUMBER, P_RESERVA IN NUMBER)
AS
V_PRECIO NUMBER;
V_CANTIDAD NUMBER;
VSQLCODE NUMBER;
VSQLERRM VARCHAR2(600);
BEGIN
    V_CANTIDAD:=1;
    SELECT R.COSTO INTO V_PRECIO FROM 
    FIDE_RESERVAS_TB J
    INNER JOIN FIDE_INSTALACIONES_TB R ON
    J.ID_INSTALACION = R.ID_INSTALACION;
    INSERT INTO FIDE_CARRITO_ITEMS_TB (ID_CARRITO, ID_RESERVA, CANTIDAD, PRECIO) VALUES (P_ID_CARRITO, P_RESERVA, V_CANTIDAD, V_PRECIO*V_CANTIDAD);
    COMMIT;
 EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error: ' || VSQLCODE || ' - ' || VSQLERRM);
END FIDE_LOS_JAULES_AGREGAR_RESERVA_SP;
END FIDE_LOS_JAULES_CARRITO_PKG;
/

-- Crear la secuencia para el ID_CARRITO
CREATE SEQUENCE ID_CARRITO_SEQ START WITH 1 INCREMENT BY 1;

-- Crear el trigger para asignar automáticamente el ID_CARRITO
CREATE OR REPLACE TRIGGER FIDE_CARRITO_TB_INSERTAR_TG
BEFORE INSERT ON FIDE_CARRITO_TB
FOR EACH ROW
BEGIN
    SELECT ID_CARRITO_SEQ.NEXTVAL INTO :NEW.ID_CARRITO FROM DUAL;
END;

CREATE SEQUENCE ID_CARRITO_ITEM_SEQ START WITH 1 INCREMENT BY 1;

-- Crear el trigger para asignar automáticamente el ID_CARRITO
CREATE OR REPLACE TRIGGER FIDE_CARRITO_ITEMS_TB_INSERTAR_TG
BEFORE INSERT ON FIDE_CARRITO_ITEMS_TB
FOR EACH ROW
BEGIN
    SELECT ID_CARRITO_ITEM_SEQ.NEXTVAL INTO :NEW.ID_ITEM FROM DUAL;
END;

COMMIT;






