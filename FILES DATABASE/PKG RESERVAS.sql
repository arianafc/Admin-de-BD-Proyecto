CREATE OR REPLACE PACKAGE FIDE_LOS_JAULES_RESERVAS_PKG AS
PROCEDURE FIDE_RESERVAS_TB_INSTALACIONES_SP (DATOS OUT SYS_REFCURSOR, P_TIPO IN NUMBER);
PROCEDURE FIDE_RESERVAS_TB_GET_INSTALACION_SP (DATOS OUT SYS_REFCURSOR, P_ID IN NUMBER);
FUNCTION FIDE_RESERVAS_TB_CREAR_RESERVA_SP (
    P_CEDULA IN NUMBER,
    P_FECHA_INICIO  IN date,
    P_FECHA_FIN    IN date,
    P_ID_INSTALACION IN NUMBER,
    P_NUM_PERSONAS  IN NUMBER,
    P_ID_CARRITO IN NUMBEr
) RETURN NUMBER;
FUNCTION FIDE_RESERVAS_TB_ACTUALIZAR_RESERVA_SP (P_ITEM IN NUMBER, 
P_FECHA_INICIO IN DATE, P_FECHA_FIN IN DATE, P_NUM_PERSONAS IN NUMBER) RETURN NUMBER;
END FIDE_LOS_JAULES_RESERVAS_PKG ;

CREATE OR REPLACE PACKAGE BODY FIDE_LOS_JAULES_RESERVAS_PKG AS
PROCEDURE FIDE_RESERVAS_TB_INSTALACIONES_SP (DATOS OUT SYS_REFCURSOR, P_TIPO IN NUMBER)
AS
BEGIN  
    OPEN DATOS FOR
    SELECT I.ID_INSTALACION, I.NOMBRE, I.COSTO, I.ID_TIPO_INSTALACION, I.CAPACIDAD, T.DESCRIPCION
    FROM FIDE_INSTALACIONES_TB I INNER JOIN FIDE_TIPO_INSTALACION_TB T
    ON I.ID_TIPO_INSTALACION = T.ID_TIPO_INSTALACION
    WHERE I.ID_ESTADO = 1 AND I.ID_TIPO_INSTALACION = P_TIPO;
END FIDE_RESERVAS_TB_INSTALACIONES_SP;
-----------------------------------------------------------------------------------------------------
PROCEDURE FIDE_RESERVAS_TB_GET_INSTALACION_SP (DATOS OUT SYS_REFCURSOR, P_ID IN NUMBER)
AS
BEGIN
    OPEN DATOS FOR
     SELECT I.ID_INSTALACION, I.NOMBRE, I.COSTO, I.ID_TIPO_INSTALACION, I.CAPACIDAD, T.DESCRIPCION
    FROM FIDE_INSTALACIONES_TB I INNER JOIN FIDE_TIPO_INSTALACION_TB T
    ON I.ID_TIPO_INSTALACION = T.ID_TIPO_INSTALACION
    WHERE I.ID_INSTALACION = P_ID;
END FIDE_RESERVAS_TB_GET_INSTALACION_SP;
-----------------------------------------------------------------------------------------------------
FUNCTION FIDE_RESERVAS_TB_CREAR_RESERVA_SP (
    P_CEDULA IN NUMBER,
    P_FECHA_INICIO  IN date,
    P_FECHA_FIN    IN date,
    P_ID_INSTALACION IN NUMBER,
    P_NUM_PERSONAS  IN NUMBER,
    P_ID_CARRITO IN NUMBER
) RETURN NUMBER
AS
    V_CONTADOR NUMBER;
    V_CAPACIDAD_MAX NUMBER;
    V_RESERVA NUMBER;
    V_TIPO_INSTALACION NUMBER;
BEGIN
    IF P_FECHA_INICIO >= P_FECHA_FIN THEN
        RETURN 0;
    END IF;
    
    SELECT COUNT(*) INTO v_contador
    FROM FIDE_RESERVAS_TB
    WHERE ID_Instalacion = p_id_instalacion
    AND (ID_Estado = 3  OR ID_ESTADO = 4)
    AND (
        (Fecha_Inicio < p_fecha_fin AND Fecha_Fin > p_fecha_inicio)
    );
    IF V_CONTADOR > 0 THEN
        RETURN 1;
    END IF;

    SELECT CAPACIDAD INTO V_CAPACIDAD_MAX FROM FIDE_INSTALACIONES_TB
    WHERE ID_INSTALACION = P_ID_INSTALACION;
    
    IF P_NUM_PERSONAS > V_CAPACIDAD_MAX THEN
        RETURN 2;
    END IF;
    --obtenemos el tipo de instalacion
    SELECT ID_TIPO_INSTALACION INTO V_TIPO_INSTALACION FROM FIDE_INSTALACIONES_TB
    WHERE ID_INSTALACION = P_ID_INSTALACION;
    
    IF V_TIPO_INSTALACION = 2 THEN
    INSERT INTO FIDE_RESERVAS_TB (Cedula, Fecha_Inicio, Fecha_Fin,  Hora_Fin, Hora_Inicio, ID_Instalacion, ID_Estado, Num_Personas)
        VALUES (P_CEDULA, P_FECHA_INICIO, P_FECHA_FIN, TO_TIMESTAMP('12:00:00', 'HH24:MI:SS'),  TO_TIMESTAMP('15:00', 'HH24:MI:SS'), P_ID_INSTALACION, 3, P_NUM_PERSONAS);
    ELSE 
    INSERT INTO FIDE_RESERVAS_TB (Cedula, Fecha_Inicio, Fecha_Fin,  Hora_Fin, Hora_Inicio, ID_Instalacion, ID_Estado, Num_Personas)
        VALUES (P_CEDULA, P_FECHA_INICIO, P_FECHA_FIN, TO_TIMESTAMP('07:00', 'HH24:MI:SS'),  TO_TIMESTAMP('17:00', 'HH24:MI:SS'), P_ID_INSTALACION, 3, P_NUM_PERSONAS);
    END IF;
   
    V_RESERVA := ID_RESERVA_SEQ.CURRVAL;
    Begin
    FIDE_LOS_JAULES_CARRITO_PKG.FIDE_LOS_JAULES_AGREGAR_RESERVA_SP(P_CEDULA, P_ID_CARRITO, V_RESERVA);
    end;
    COMMIT;
    RETURN 3;

EXCEPTION
    WHEN OTHERS THEN
         RAISE_APPLICATION_ERROR(-20099, 'Error inesperado: ' || SQLERRM);
END FIDE_RESERVAS_TB_CREAR_RESERVA_SP;

-------------------------------

FUNCTION FIDE_RESERVAS_TB_ACTUALIZAR_RESERVA_SP (P_ITEM IN NUMBER, 
P_FECHA_INICIO IN DATE, P_FECHA_FIN IN DATE, P_NUM_PERSONAS IN NUMBER) RETURN NUMBER
AS
V_RESERVA NUMBER;
V_CANTIDAD NUMBER;
V_CONTADOR NUMBER;
V_CAPACIDAD NUMBER;
V_INSTALACION NUMBER;
V_TIPO_INSTALACION NUMBER;
BEGIN
    IF P_FECHA_INICIO >= P_FECHA_FIN THEN
        RETURN 0;
    END IF;
    
    SELECT ID_RESERVA INTO V_RESERVA 
    FROM FIDE_CARRITO_ITEMS_TB
    WHERE ID_ITEM = P_ITEM;
    
    SELECT ID_INSTALACION INTO V_INSTALACION
    FROM FIDE_RESERVAS_TB
    WHERE ID_RESERVA = V_RESERVA;
    
    SELECT COUNT(*) INTO v_contador
    FROM FIDE_RESERVAS_TB
    WHERE ID_Instalacion = V_instalacion
    AND (ID_Estado = 3  OR ID_ESTADO = 4)
    AND (
        (Fecha_Inicio < p_fecha_fin AND Fecha_Fin > p_fecha_inicio)
    ) AND ID_RESERVA != V_RESERVA;
    IF V_CONTADOR > 0 THEN
        RETURN 1;
    END IF;

    SELECT CAPACIDAD, ID_TIPO_INSTALACION INTO V_CAPACIDAD, V_TIPO_INSTALACION FROM FIDE_INSTALACIONES_TB
    WHERE ID_INSTALACION = V_INSTALACION;

    IF P_NUM_PERSONAS > V_CAPACIDAD THEN
        RETURN 2;
    END IF;
    

    
    IF V_TIPO_INSTALACION = 2 THEN
        V_CANTIDAD := P_FECHA_FIN - P_FECHA_INICIO;
    ELSE 
      V_CANTIDAD := (P_FECHA_FIN - P_FECHA_INICIO)+1;
    END IF;    
        
    UPDATE FIDE_CARRITO_ITEMS_TB SET CANTIDAD = V_CANTIDAD WHERE ID_ITEM = P_ITEM;
    UPDATE FIDE_RESERVAS_TB SET FECHA_INICIO = P_FECHA_INICIO, FECHA_FIN = P_FECHA_FIN, NUM_PERSONAS = P_NUM_PERSONAS WHERE ID_RESERVA = V_RESERVA;
    RETURN 3;
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
         RAISE_APPLICATION_ERROR(-20099, 'Error inesperado: ' || SQLERRM);
END FIDE_RESERVAS_TB_ACTUALIZAR_RESERVA_SP;



END FIDE_LOS_JAULES_RESERVAS_PKG ;

EXEC FIDE_LOS_JAULES_RESERVAS_PKG.FIDE_RESERVAS_TB_ACTUALIZAR_RESERVA_SP(14, TO_DATE(

INSERT INTO FIDE_ESTADO_TB VALUES (3, 'PENDIENTE');
INSERT INTO FIDE_ESTADO_TB VALUES (4, 'RESERVADA');
INSERT INTO FIDE_ESTADO_TB VALUES (5, 'CANCELADA');
COMMIT;

SET SERVEROUTPUT ON

DECLARE
    V_RESULTADO VARCHAR2(300);
BEGIN
    BEGIN
        FIDE_LOS_JAULES_RESERVAS_PKG.FIDE_RESERVAS_TB_CREAR_RESERVA_SP (
            1233,                          -- Cedula
            TO_DATE('2025-04-05', 'YYYY-MM-DD'),                   -- Fecha Inicio
            TO_DATE('2025-04-06',  'YYYY-MM-DD'),                -- Fecha Fin
            2,                             -- ID Instalación
            1,
            10,-- Número de Personas
            V_RESULTADO                    -- Resultado
        );
        DBMS_OUTPUT.PUT_LINE(V_RESULTADO);
    END;
END;


SELECT * FROM NLS_SESSION_PARAMETERS WHERE PARAMETER = 'NLS_DATE_FORMAT';

SELECT ID_TIPO_INSTALACION  FROM FIDE_INSTALACIONES_TB
    WHERE ID_INSTALACION = 5;
