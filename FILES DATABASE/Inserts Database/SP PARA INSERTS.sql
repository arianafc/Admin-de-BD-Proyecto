-------------------=---------------------------------------------------
--1. AGREGAR LAS CEDULAS AL CARRITO

INSERT INTO FIDE_CARRITO_TB (CEDULA) VALUES (303500186);
-----------------------------------------------------------------------

--2. AGREGAR MEMBRESIA O RESERVA O AMBAS
EXEC AGREGAR_MEMBRESIA_SP(8977, 2); ---AQUI

BEGIN ---AGREGAR RESERVAS
    INSERTAR_RESERVA(
        P_CEDULA        => 1233,
        P_FECHA_INICIO  => TO_DATE('2021-04-15', 'YYYY-MM-DD'),
        P_FECHA_FIN     => TO_DATE('2021-04-16', 'YYYY-MM-DD'),
        P_ID_INSTALACION => 4,
        ID_ESTADO       => 3,
        P_NUM_PERSONAS  => 4,
        P_HORA_FIN      => TO_TIMESTAMP('18:00:00', 'HH24:MI:SS'),
        P_HORA_INICIO   => TO_TIMESTAMP('10:00:00', 'HH24:MI:SS')
    );
END;

---3. EJECUTAR EL CARRITO

BEGIN
    EJECUTAR_CARRITO(
        P_CEDULA        => 8977,
        P_METODO_PAGO   => 1,
        FECHA           => TO_DATE('2024-04-11', 'YYYY-MM-DD')
    );
END;

------------------------------------------------------------------------------------------------------------------
COMMIT










CREATE OR REPLACE PROCEDURE INSERTAR_RESERVA (
    P_CEDULA        IN NUMBER,
    P_FECHA_INICIO  IN DATE,
    P_FECHA_FIN     IN DATE,
    P_ID_INSTALACION IN NUMBER,
    ID_ESTADO       IN NUMBER,
    P_NUM_PERSONAS  IN NUMBER,
    P_HORA_FIN      IN TIMESTAMP,
    P_HORA_INICIO   IN TIMESTAMP
) AS 
    V_CARRITO           NUMBER;
    V_RESERVA           NUMBER;
    V_TIPO_INSTALACION  NUMBER;
BEGIN   
    SELECT ID_CARRITO 
    INTO V_CARRITO 
    FROM FIDE_CARRITO_TB
    WHERE CEDULA = P_CEDULA;
    
    SELECT ID_TIPO_INSTALACION 
    INTO V_TIPO_INSTALACION 
    FROM FIDE_INSTALACIONES_TB
    WHERE ID_INSTALACION = P_ID_INSTALACION;
    
    IF V_TIPO_INSTALACION = 2 THEN
        INSERT INTO FIDE_RESERVAS_TB (
            Cedula, Fecha_Inicio, Fecha_Fin, Hora_Inicio, Hora_Fin, 
            ID_Instalacion, ID_Estado, Num_Personas)
        VALUES (
            P_CEDULA, P_FECHA_INICIO, P_FECHA_FIN, 
            TO_TIMESTAMP('14:00:00', 'HH24:MI:SS'), 
            TO_TIMESTAMP('12:00:00', 'HH24:MI:SS'), 
            P_ID_INSTALACION, 3, P_NUM_PERSONAS);
    
    ELSIF V_TIPO_INSTALACION IN (3, 4) THEN 
        INSERT INTO FIDE_RESERVAS_TB (
            Cedula, Fecha_Inicio, Fecha_Fin, Hora_Inicio, Hora_Fin, 
            ID_Instalacion, ID_Estado, Num_Personas)
        VALUES (
            P_CEDULA, P_FECHA_INICIO, P_FECHA_FIN, 
            TO_TIMESTAMP('07:00:00', 'HH24:MI:SS'), 
            TO_TIMESTAMP('17:00:00', 'HH24:MI:SS'), 
            P_ID_INSTALACION, 3, P_NUM_PERSONAS);
    
    ELSE 
        INSERT INTO FIDE_RESERVAS_TB (
            Cedula, Fecha_Inicio, Fecha_Fin, Hora_Inicio, Hora_Fin, 
            ID_Instalacion, ID_Estado, Num_Personas)
        VALUES (
            P_CEDULA, P_FECHA_INICIO, P_FECHA_FIN, 
            P_HORA_INICIO, P_HORA_FIN, 
            P_ID_INSTALACION, 3, P_NUM_PERSONAS);
    END IF;

    V_RESERVA := ID_RESERVA_SEQ.CURRVAL;

    BEGIN
        FIDE_LOS_JAULES_CARRITO_PKG.FIDE_LOS_JAULES_AGREGAR_RESERVA_SP(
            P_CEDULA, V_CARRITO, V_RESERVA);
    END;

END INSERTAR_RESERVA;

--------------------------------------------

----------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE AGREGAR_MEMBRESIA_SP(P_CEDULA IN NUMBER, P_MEMBRESIA IN NUMBER)
AS
V_PRECIO NUMBER;
VSQLCODE NUMBER;
VSQLERRM VARCHAR2(600);
V_CANTIDAD NUMBER;
V_CARRITO NUMBER;
BEGIN
    SELECT ID_CARRITO INTO V_CARRITO FROM FIDE_CARRITO_TB
    WHERE CEDULA = P_CEDULA;
    V_CANTIDAD:=1;
    SELECT COSTO INTO V_PRECIO FROM FIDE_TIPO_MEMBRESIAS_TB WHERE ID_TIPO_MEMBRESIA = P_MEMBRESIA;
    INSERT INTO FIDE_CARRITO_ITEMS_TB (ID_CARRITO, ID_TIPO_MEMBRESIA, CANTIDAD, PRECIO) VALUES (V_CARRITO, P_MEMBRESIA, V_CANTIDAD, V_PRECIO*V_CANTIDAD);
    COMMIT;
 EXCEPTION
        WHEN OTHERS THEN
            VSQLCODE:= SQLCODE;
            VSQLERRM := SQLERRM;
            DBMS_OUTPUT.PUT_LINE('Error: ' || VSQLCODE || ' - ' || VSQLERRM);
            RAISE_APPLICATION_ERROR(SQLCODE, SQLERRM);
END;


-----------------------------------------------------------------------------------

--------------------------------------------------------------------------------------







SET SERVEROUTPUT ON

CREATE OR REPLACE PROCEDURE EJECUTAR_CARRITO(P_CEDULA IN NUMBER, P_METODO_PAGO IN NUMBER, FECHA DATE)
AS
    V_TOTAL NUMBER;
    V_ORDEN NUMBER;
    V_MEMBRESIA NUMBER;
    V_NUMBER NUMBER;
    V_DIAS NUMBER;
    V_CONTAR NUMBER;
    V_CARRITO NUMBER;
BEGIN
    SELECT ID_CARRITO INTO V_CARRITO 
    FROM FIDE_CARRITO_TB
    WHERE CEDULA = P_CEDULA;

    V_TOTAL := FIDE_LOS_JAULES_CHECKOUT_PKG.FIDE_CHECKOUT_TB_TOTAL_SP(V_CARRITO);

    INSERT INTO FIDE_ORDENES_TB (CEDULA, TOTAL, ID_ESTADO, ID_METODO_PAGO) 
    VALUES (P_CEDULA, V_TOTAL, 6, P_METODO_PAGO);

    V_NUMBER := ID_ORDEN_SEQ.CURRVAL;

    FOR CUR IN (
        SELECT ID_RESERVA, ID_TIPO_MEMBRESIA, CANTIDAD, PRECIO 
        FROM FIDE_CARRITO_ITEMS_TB
        WHERE ID_CARRITO = V_CARRITO
    ) LOOP
        UPDATE FIDE_RESERVAS_TB 
        SET ID_ESTADO = 4 
        WHERE ID_RESERVA = CUR.ID_RESERVA;

        INSERT INTO FIDE_ORDEN_ITEMS_TB (ID_ORDEN, ID_RESERVA, ID_TIPO_MEMBRESIA, CANTIDAD, PRECIO)
        VALUES (V_NUMBER, CUR.ID_RESERVA, CUR.ID_TIPO_MEMBRESIA, CUR.CANTIDAD, CUR.PRECIO);
    END LOOP;

    COMMIT;

    BEGIN
        SELECT ID_TIPO_MEMBRESIA INTO V_MEMBRESIA 
        FROM FIDE_CARRITO_ITEMS_TB
        WHERE ID_CARRITO = V_CARRITO AND ID_TIPO_MEMBRESIA IS NOT NULL 
        FETCH FIRST 1 ROWS ONLY;

        IF V_MEMBRESIA IS NOT NULL THEN
            UPDATE FIDE_MEMBRESIAS_TB 
            SET ID_ESTADO = 0 
            WHERE CEDULA = P_CEDULA AND ID_ESTADO = 1;

            SELECT DURACION_DIAS INTO V_DIAS 
            FROM FIDE_TIPO_MEMBRESIAS_TB 
            WHERE ID_TIPO_MEMBRESIA = V_MEMBRESIA;

            IF V_DIAS = 1 THEN    
                INSERT INTO FIDE_MEMBRESIAS_TB (CEDULA, FECHA_INICIO, ID_ESTADO, FECHA_FIN, ID_TIPO_MEMBRESIA) 
                VALUES (P_CEDULA, FECHA, 1, FECHA, V_MEMBRESIA);
            ELSE 
                INSERT INTO FIDE_MEMBRESIAS_TB (CEDULA, FECHA_INICIO, ID_ESTADO, FECHA_FIN, ID_TIPO_MEMBRESIA) 
                VALUES (P_CEDULA, FECHA, 1, (FECHA + V_DIAS), V_MEMBRESIA);
            END IF;
            COMMIT;
        END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            NULL; -- No hay membres√≠a en carrito, no pasa nada
    END;

    -- Crear factura
    INSERT INTO FIDE_FACTURA_TB (ID_ORDEN, FECHA_EMISION, SUBTOTAL, TOTAL, IVA)
    VALUES (V_NUMBER, FECHA, (V_TOTAL * 0.87), V_TOTAL, (V_TOTAL * 0.13));

    EXECUTE IMMEDIATE 'ANALYZE TABLE FIDE_FACTURA_TB COMPUTE STATISTICS';

    DELETE FROM FIDE_CARRITO_ITEMS_TB WHERE ID_CARRITO = V_CARRITO;

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
        ROLLBACK;
END;
