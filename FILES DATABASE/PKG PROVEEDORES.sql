CREATE OR REPLACE PACKAGE FIDE_LOS_JAULES_PROVEEDORES_PKG AS
  -- Proveedores
  PROCEDURE FIDE_PROVEEDORES_TB_GET_ALL_SP(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE FIDE_PROVEEDORES_TB_GET_PROVEEDOR_SP(p_cursor OUT SYS_REFCURSOR, p_id IN NUMBER);
  PROCEDURE FIDE_PROVEEDORES_TB_INSERTAR_SP(p_nombre IN VARCHAR2, p_telefono IN NUMBER, p_email IN VARCHAR2);
  PROCEDURE FIDE_PROVEEDORES_TB_MODIFICAR_SP(p_id IN NUMBER, p_nombre IN VARCHAR2, p_telefono IN NUMBER, p_email IN VARCHAR2);
  PROCEDURE FIDE_PROVEEDORES_TB_ELIMINAR_PROVEEDOR_SP(p_id IN NUMBER);

  -- Productos
  PROCEDURE FIDE_PRODUCTOS_TB_GET_ALL_PRODUCTOS_SP(p_cursor OUT SYS_REFCURSOR);
  PROCEDURE FIDE_PRODUCTOS_TB_INSERTAR_PRODUCTO_SP(p_nombre IN VARCHAR2, p_costo IN NUMBER);
  PROCEDURE FIDE_PRODUCTOS_TB_MODIFICAR_PRODUCTO_SP(p_id IN NUMBER, p_nombre IN VARCHAR2, p_costo IN NUMBER);
  PROCEDURE FIDE_PRODUCTOS_TB_ELIMINAR_PRODUCTO_SP(p_id IN NUMBER);

  -- Relaci√≥n productos-proveedor
  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_GET_PRODUCTOS_POR_PROVEEDOR_SP(p_cursor OUT SYS_REFCURSOR, p_id_proveedor IN NUMBER);
  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_INSERTAR_PRODUCTO_A_PROVEEDOR_SP(p_id_proveedor IN NUMBER, p_id_producto IN NUMBER);
  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_ELIMINAR_PRODUCTO_DE_PROVEEDOR_SP(p_id_prod_proveedor IN NUMBER);
END FIDE_LOS_JAULES_PROVEEDORES_PKG;

-- SECUENCIA
CREATE SEQUENCE FIDE_PROVEEDORES_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- TRIGGER
CREATE OR REPLACE TRIGGER FIDE_PROVEEDORES_TRG
BEFORE INSERT ON FIDE_PROVEEDORES_TB
FOR EACH ROW
BEGIN
  :NEW.ID_PROVEEDOR := FIDE_PROVEEDORES_SEQ.NEXTVAL;
END;
/

-- SECUENCIA
CREATE SEQUENCE FIDE_PRODUCTOS_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- TRIGGER
CREATE OR REPLACE TRIGGER FIDE_PRODUCTOS_TRG
BEFORE INSERT ON FIDE_PRODUCTOS_TB
FOR EACH ROW
BEGIN
  :NEW.ID_PRODUCTO := FIDE_PRODUCTOS_SEQ.NEXTVAL;
END;
/

-- SECUENCIA
CREATE SEQUENCE FIDE_PROD_PROVEEDOR_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- TRIGGER
CREATE OR REPLACE TRIGGER FIDE_PROD_PROVEEDOR_TRG
BEFORE INSERT ON FIDE_PRODUCTOS_PROVEEDOR_TB
FOR EACH ROW
BEGIN
  :NEW.ID_PROD_PROVEEDOR := FIDE_PROD_PROVEEDOR_SEQ.NEXTVAL;
END;
/

CREATE OR REPLACE PACKAGE BODY FIDE_LOS_JAULES_PROVEEDORES_PKG AS

  -- =======================
  -- PROVEEDORES
  -- =======================

  PROCEDURE FIDE_PROVEEDORES_TB_GET_ALL_SP(p_cursor OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN p_cursor FOR
      SELECT * FROM FIDE_PROVEEDORES_TB
      WHERE ID_ESTADO = 1;
  END;

  PROCEDURE FIDE_PROVEEDORES_TB_GET_PROVEEDOR_SP(p_cursor OUT SYS_REFCURSOR, p_id IN NUMBER) IS
  BEGIN
    OPEN p_cursor FOR
      SELECT * FROM FIDE_PROVEEDORES_TB
      WHERE ID_PROVEEDOR = p_id AND ID_ESTADO = 1;
  END;

  PROCEDURE FIDE_PROVEEDORES_TB_INSERTAR_SP(p_nombre IN VARCHAR2, p_telefono IN NUMBER, p_email IN VARCHAR2) IS
  BEGIN
    INSERT INTO FIDE_PROVEEDORES_TB (
      ID_PROVEEDOR, NOMBRE, TELEFONO, EMAIL, ID_ESTADO
    ) VALUES (
      FIDE_PROVEEDORES_SEQ.NEXTVAL, p_nombre, p_telefono, p_email, 1
    );
    COMMIT;
  END;

  PROCEDURE FIDE_PROVEEDORES_TB_MODIFICAR_SP(p_id IN NUMBER, p_nombre IN VARCHAR2, p_telefono IN NUMBER, p_email IN VARCHAR2) IS
  BEGIN
    UPDATE FIDE_PROVEEDORES_TB
    SET NOMBRE = p_nombre,
        TELEFONO = p_telefono,
        EMAIL = p_email
    WHERE ID_PROVEEDOR = p_id;
    COMMIT;
  END;

  PROCEDURE FIDE_PROVEEDORES_TB_ELIMINAR_PROVEEDOR_SP(p_id IN NUMBER) IS
  BEGIN
    UPDATE FIDE_PROVEEDORES_TB
    SET ID_ESTADO = 0
    WHERE ID_PROVEEDOR = p_id;
    COMMIT;
  END;

  -- =======================
  -- PRODUCTOS
  -- =======================

  PROCEDURE FIDE_PRODUCTOS_TB_GET_ALL_PRODUCTOS_SP(p_cursor OUT SYS_REFCURSOR) IS
  BEGIN
    OPEN p_cursor FOR
      SELECT * FROM FIDE_PRODUCTOS_TB
      WHERE ID_ESTADO = 1;
  END;

  PROCEDURE FIDE_PRODUCTOS_TB_INSERTAR_PRODUCTO_SP(p_nombre IN VARCHAR2, p_costo IN NUMBER) IS
  BEGIN
    INSERT INTO FIDE_PRODUCTOS_TB (
      ID_PRODUCTO, NOMBRE, COSTO, ID_ESTADO
    ) VALUES (
      FIDE_PRODUCTOS_SEQ.NEXTVAL, p_nombre, p_costo, 1
    );
    COMMIT;
  END;

  PROCEDURE FIDE_PRODUCTOS_TB_MODIFICAR_PRODUCTO_SP(p_id IN NUMBER, p_nombre IN VARCHAR2, p_costo IN NUMBER) IS
  BEGIN
    UPDATE FIDE_PRODUCTOS_TB
    SET NOMBRE = p_nombre,
        COSTO = p_costo
    WHERE ID_PRODUCTO = p_id;
    COMMIT;
  END;

  PROCEDURE FIDE_PRODUCTOS_TB_ELIMINAR_PRODUCTO_SP(p_id IN NUMBER) IS
  BEGIN
    UPDATE FIDE_PRODUCTOS_TB
    SET ID_ESTADO = 0
    WHERE ID_PRODUCTO = p_id;
    COMMIT;
  END;

  -- =======================
  -- PRODUCTOS POR PROVEEDOR
  -- =======================

  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_GET_PRODUCTOS_POR_PROVEEDOR_SP(p_cursor OUT SYS_REFCURSOR, p_id_proveedor IN NUMBER) IS
  BEGIN
    OPEN p_cursor FOR
      SELECT pp.ID_PROD_PROVEEDOR, pr.NOMBRE AS NOMBRE_PRODUCTO, pr.COSTO
      FROM FIDE_PRODUCTOS_PROVEEDOR_TB pp
      JOIN FIDE_PRODUCTOS_TB pr ON pp.ID_PRODUCTO = pr.ID_PRODUCTO
      WHERE pp.ID_PROVEEDOR = p_id_proveedor
      AND pp.ID_ESTADO = 1
      AND pr.ID_ESTADO = 1;
  END;

  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_INSERTAR_PRODUCTO_A_PROVEEDOR_SP(p_id_proveedor IN NUMBER, p_id_producto IN NUMBER) IS
  BEGIN
    INSERT INTO FIDE_PRODUCTOS_PROVEEDOR_TB (
      ID_PROD_PROVEEDOR, ID_PROVEEDOR, ID_PRODUCTO, ID_ESTADO
    ) VALUES (
      FIDE_PROD_PROVEEDOR_SEQ.NEXTVAL, p_id_proveedor, p_id_producto, 1
    );
    COMMIT;
  END;

  PROCEDURE FIDE_PRODUCTOS_PROVEEDOR_TB_ELIMINAR_PRODUCTO_DE_PROVEEDOR_SP(p_id_prod_proveedor IN NUMBER) IS
  BEGIN
    UPDATE FIDE_PRODUCTOS_PROVEEDOR_TB
    SET ID_ESTADO = 0
    WHERE ID_PROD_PROVEEDOR = p_id_prod_proveedor;
    COMMIT;
  END;

END FIDE_LOS_JAULES_PROVEEDORES_PKG;
/

    